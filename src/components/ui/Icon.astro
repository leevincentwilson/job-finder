---
// src/components/ui/Icon.astro
interface Props {
  name: string;
  size?: number;
  class?: string;
  strokeWidth?: number;
  id?: string;
}

const {
  name,
  size = 24,
  class: className = "",
  strokeWidth = 2,
  id,
} = Astro.props;

const icons = {
  // Navigation icons
  home: `<path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
         <polyline points="9 22 9 12 15 12 15 22"></polyline>`,

  usage: `<path d="M22 12h-4l-3 9L9 3l-3 9H2"></path>`,

  billing: `<rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect>
            <line x1="1" y1="10" x2="23" y2="10"></line>`,

  // Toggle icon
  chevronLeft: `<path d="M15 18l-6-6 6-6"></path>`,
  chevronRight: `<path d="M9 18l6-6-6-6"></path>`,

  // Stat icons
  barChart: `<path d="M18 20V10"></path>
             <path d="M12 20V4"></path>
             <path d="M6 20v-6"></path>`,

  clock: `<circle cx="12" cy="12" r="10"></circle>
          <polyline points="12 6 12 12 16 14"></polyline>`,

  dollar: `<line x1="12" y1="1" x2="12" y2="23"></line>
           <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>`,

  // Trend icons
  trendUp: `<path d="M7 17l5-5 5 5"></path>
            <path d="M7 7h10"></path>`,

  trendDown: `<path d="M7 7l5 5 5-5"></path>
              <path d="M7 17h10"></path>`,
};
---

<svg
  xmlns="http://www.w3.org/2000/svg"
  width={size}
  height={size}
  viewBox="0 0 24 24"
  fill="none"
  stroke="currentColor"
  stroke-width={strokeWidth}
  stroke-linecap="round"
  stroke-linejoin="round"
  class={className}
  id={id}
  aria-hidden="true"
  data-icon={name}
>
  <Fragment set:html={icons[name]} />
</svg>

<script define:vars={{ icons }}>
  // Client-side script to handle icon name changes
  document.addEventListener("DOMContentLoaded", () => {
    // Find all svg elements with data-icon attribute
    const iconElements = document.querySelectorAll("svg[data-icon]");

    // Add a mechanism to change icon
    if (typeof window !== "undefined") {
      // Extend SVG elements with a method to change the icon
      window.changeIcon = (id, newName) => {
        const svgElement = document.getElementById(id);
        if (svgElement && icons[newName]) {
          svgElement.innerHTML = icons[newName];
          svgElement.setAttribute("data-icon", newName);
        }
      };

      // Define a custom attribute setter for name
      Object.defineProperty(SVGElement.prototype, "name", {
        set: function (newName) {
          if (icons[newName]) {
            this.innerHTML = icons[newName];
            this.setAttribute("data-icon", newName);
          }
        },
        get: function () {
          return this.getAttribute("data-icon");
        },
      });
    }
  });
</script>
